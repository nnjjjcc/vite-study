原生CSS：
1原生 CSS 不支持选择器的嵌套，
2如果出现同样的类名，很容易造成不同的样式互相覆盖和污染，
3浏览器兼容问题，
4打包后的代码体积问题.
解决方案：
CSS 预处理器： scss,less,stylus.嵌套规则，定义变量，条件判断和循环语句。
CSS Modules ：CSS 类名处理成哈希值。
CSS 后处理器PostCSS：
CSS in JS 方案
CSS 原子化框架
--------
vite:本身对 CSS 各种预处理器语言(Sass/Scss、Less和Stylus)做了内置支持
normalizePath函数可以处理包括相对路径和绝对路径在内的各种路径，并返回标准化后的路径。
path.resolve:
1.用于将相对路径解析为绝对路径。它将路径或路径片段解析为绝对路径
2.接受一个或多个路径片段作为参数，并将它们解析为一个绝对路径
如果路径片段以斜杠 (/) 开头，那么它被认为是从根目录开始的绝对路径。
如果路径片段以 ./ 或 ../ 开头，它被认为是相对路径，并从当前工作目录开始解析。
如果路径片段不以斜杠、 ./ 或 ../ 开头，它被认为是相对于当前工作目录的文件或目录。
Vite 会对后缀带有.module的样式文件自动应用 CSS Modules
PostCSS 插件:自动为不同的目标浏览器添加样式前缀，解决的是浏览器兼容性的问题。
postcss-pxtorem： 用来将 px 转换为 rem 单位，在适配移动端的场景下很常用。
postcss-preset-env: 通过它，你可以编写最新的 CSS 语法，不用担心兼容性问题。
cssnano: 主要用来压缩 CSS 代码，跟常规的代码压缩工具不一样，它能做得更加智能，比如提取一些公共样式进行复用、缩短一些常见的属性值等等。